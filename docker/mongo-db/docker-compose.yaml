version: '3.5'
services:
  ##
  # 3 Mongo instances, all belong the the same replica set
  ##
  mongo-rs0-1:
    image: "mongo-start"
    container_name: mongo-rs0-1
    build: ./mongo-rs0-1
    expose:
      - "27017"
    volumes:
      - ./mongo-rs0-1/data:/data/db
    depends_on:
      - "mongo-rs0-2"
      - "mongo-rs0-3"
    networks:
      - crowd_sourcing_net
  mongo-rs0-2:
    image: "mongo"
    container_name: mongo-rs0-2
    command: --replSet rs0 --smallfiles --oplogSize 128
    expose:
      - "27017"
    volumes:
      - ./mongo-rs0-2/data:/data/db
    networks:
      - crowd_sourcing_net
  mongo-rs0-3:
    image: "mongo"
    container_name: mongo-rs0-3
    command: --replSet rs0 --smallfiles --oplogSize 128
    expose:
      - "27017"
    volumes:
      - ./mongo-rs0-3/data:/data/db
    networks:
      - crowd_sourcing_net
  ##
  # Create temp container which will setup the replica set configuration after the mongodb containers are up
  # and running.
  ##
  mongo-rs-setup:
    image: "mongo-rs-setup"
    build: ./setup
    depends_on:
      - "mongo-rs0-1"
    networks:
      - crowd_sourcing_net
  ##
  # Virtual mongo administrator, used to access the mongo-replica instances
  ##
  mongo-admin:
    image: "mrvautin/adminmongo"
    environment:
      - HOST=0.0.0.0
    ports:
      - "9000:1234"
    networks:
      - crowd_sourcing_net
##
# Custom network, used to connect multiple docker-compose files and make all services
# run under same network
##
networks:
  crowd_sourcing_net:
    name: crowd_sourcing_net