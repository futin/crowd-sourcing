version: '3'
services:
  ##
  # NodeJs "dev" server configuration, with custom environment variables
  ##
  server-dev:
    restart: always
    build: .
    environment:
      - MONGO_SERVERS=mongo-rs0-1:27017,mongo-rs0-2:27017,mongo-rs0-3:27017
      - DEBUG=crowd-sourcing:*
      - NODE_ENV=dev
    # map range of ports, so you can scale the app up to 5 replicas
#    ports:
#      - "3001-3005:3001"
#     This can be used with nginx server, where server should be exposed only by inner network
    expose:
     - "3001"
    volumes:
      - ./lib:/usr/src/app/lib
    networks:
      - crowd_sourcing_net
  ##
  # NodeJs "prod" server configuration, with custom environment variables
  ##
#  server-prod:
#    restart: always
#    build: .
#    environment:
#      - MONGO_SERVERS=mongo-rs0-1:27017,mongo-rs0-2:27017,mongo-rs0-3:27017
#      - DEBUG=crowd-sourcing:*
#      - NODE_ENV=prod
#    expose:
#      - "5000"
#    volumes:
#      - ./lib:/usr/src/app/lib
#    networks:
#      - crowd_sourcing_net
  ##
  # Nginx server, listening on port 80 and handling load-balancing and forwarding http requests.
  ##
  nginx:
    restart: always
    build: ./docker/nginx
    container_name: nginx
    depends_on:
      - server-dev
    ports:
      - "80:80"
      - "443:443"
    networks:
      - crowd_sourcing_net
##
# The network crowd_sourcing_net has been previously created
##
networks:
  crowd_sourcing_net:
    external:
      name: crowd_sourcing_net